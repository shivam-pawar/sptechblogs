"use strict";(self.webpackChunksptechblogs=self.webpackChunksptechblogs||[]).push([[5427],{5653:e=>{e.exports=JSON.parse('{"blogPosts":[{"id":"improve-your-js-code-part-1","metadata":{"permalink":"/sptechblogs/blog/improve-your-js-code-part-1","editUrl":"https://github.com/shivam-pawar/sptechblogs/tree/master/blog/2022-12-09-improve-your-js-code-1.md","source":"@site/blog/2022-12-09-improve-your-js-code-1.md","title":"Improve your JavaScript Code Part - 1","description":"Avoid too many nested If Else","date":"2022-12-09T00:00:00.000Z","formattedDate":"December 9, 2022","tags":[{"label":"JavaScript","permalink":"/sptechblogs/blog/tags/java-script"},{"label":"tricks","permalink":"/sptechblogs/blog/tags/tricks"},{"label":"alternative","permalink":"/sptechblogs/blog/tags/alternative"},{"label":"programming","permalink":"/sptechblogs/blog/tags/programming"}],"readingTime":2.39,"hasTruncateMarker":true,"authors":[{"name":"Shivam Pawar","title":"Software Developer @Emtec Inc.","url":"https://github.com/shivam-pawar/","imageURL":"https://github.com/shivam-pawar.png","key":"shivam-pawar"}],"frontMatter":{"slug":"improve-your-js-code-part-1","title":"Improve your JavaScript Code Part - 1","authors":"shivam-pawar","tags":["JavaScript","tricks","alternative","programming"]},"nextItem":{"title":"FIX - replaceAll() is not a Function In JavaScript","permalink":"/sptechblogs/blog/replaceAll-in-javascript"}},"content":"## Avoid too many nested If Else\\r\\n\\r\\nNested if-else statements should be avoided. Maintain the code\'s linearity and simplicity.\\r\\n\\r\\nConsider using an if-else statement that is nested and does not take advantage of the power of the return statement.\\r\\n\\r\\n\x3c!--truncate--\x3e\\r\\n\\r\\n```js\\r\\nfunction getNameById(id) {\\r\\n  if (id === \\"M57\\") {\\r\\n    return \\"Harry\\";\\r\\n  } else if (id === \\"U11\\") {\\r\\n    return \\"Prince\\";\\r\\n  } else if (id === \\"S57\\") {\\r\\n    return \\"Jack\\";\\r\\n  } else if (id === \\"G46\\") {\\r\\n    return \\"John\\";\\r\\n  } else if (id === \\"B93\\") {\\r\\n    return \\"Scott\\";\\r\\n  }\\r\\n}\\r\\n```\\r\\n\\r\\nThe code above needs to be refactored in order to increase performance, and many people are considering using switch case statements. However, let me share one tricky technique to handle this type of code in order to take performance improvement into consideration.\\r\\n\\r\\nYou just need to create one object with key as a condition of if statement and value as return statement of if.\\r\\n\\r\\n```js\\r\\nconst nameIdMap = {\\r\\n  M57: \\"Harry\\",\\r\\n  U11: \\"Prince\\",\\r\\n  S57: \\"Jack\\",\\r\\n  G46: \\"John\\",\\r\\n  B93: \\"Scott\\",\\r\\n};\\r\\n\\r\\nfunction getNameById(id) {\\r\\n    return nameIdMap[id];\\r\\n}\\r\\n```\\r\\n\\r\\nThe code above is more readable and flexible.\\r\\n\\r\\n## Avoid bulky If Else block\\r\\n\\r\\nSuppose you want to check user permissions based on roles and write code like this:\\r\\n\\r\\n```js\\r\\nfunction checkAccess(role) {\\r\\n  if (\\r\\n    role === \\"Admin\\" ||\\r\\n    role === \\"Manager\\" ||\\r\\n    role === \\"Director\\" ||\\r\\n    role === \\"Owner\\"\\r\\n  ) {\\r\\n    return true;\\r\\n  } else return false;\\r\\n}\\r\\n```\\r\\n\\r\\nThe above code will obviously work, but we can improve it by using array\'s method.\\r\\n\\r\\nWe will declare one array which contains all the accessible roles and apply includes() method of array.\\r\\n\\r\\n```js\\r\\nallowedAccess = [\\"Admin\\", \\"Manager\\", \\"Director\\", \\"Owner\\"];\\r\\n\\r\\nfunction checkAccess(role) {\\r\\n  return allowedAccess.includes(role);\\r\\n}\\r\\n```\\r\\n\\r\\n## Avoid If Else Use Ternary Operator\\r\\n\\r\\nWe can sometimes reduce the number of lines of code by using the ternary operator.\\r\\n\\r\\nSuppose you want to refactor this code with ternary operators. Here\'s a simple example.\\r\\n\\r\\n```js\\r\\nfunction checkResult(marks) {\\r\\n  if (marks >= 50) {\\r\\n    return \\"Pass\\";\\r\\n  } else {\\r\\n    return \\"Fail\\";\\r\\n  }\\r\\n}\\r\\n```\\r\\n\\r\\nWe can re-write this code as:\\r\\n\\r\\n```js\\r\\nfunction checkResult(marks) {\\r\\n  return marks >= 50 ? \\"Pass\\" : \\"Fail\\";\\r\\n}\\r\\n```\\r\\n\\r\\n## Avoid If Else when return value is Boolean\\r\\n\\r\\nSometime our function return boolean values then in this can we don\'t need if else blocks.\\r\\n\\r\\n```js\\r\\nfunction isValid(value) {\\r\\n  if (value >= 50) {\\r\\n    return true;\\r\\n  } else {\\r\\n    return false;\\r\\n  }\\r\\n}\\r\\n```\\r\\n\\r\\nWe can write code like this:\\r\\n\\r\\n```js\\r\\nfunction isValid(value) {\\r\\n  return value >= 50;\\r\\n}\\r\\n```\\r\\n\\r\\n## Conclusion\\r\\n\\r\\nAny programming language must include decision constructs. However, we end up coding a huge number of nested if statements, making our code more complex and difficult to maintain.\\r\\n\\r\\nIn this post, we learned how to use effective design patterns to replace if statements.\\r\\n\\r\\n> If you found this article useful, please share it with your friends and colleagues!\u2764\ufe0f"},{"id":"replaceAll-in-javascript","metadata":{"permalink":"/sptechblogs/blog/replaceAll-in-javascript","editUrl":"https://github.com/shivam-pawar/sptechblogs/tree/master/blog/2022-04-16-replaceAll-In-JavaScript.md","source":"@site/blog/2022-04-16-replaceAll-In-JavaScript.md","title":"FIX - replaceAll() is not a Function In JavaScript","description":"Why is this error occurring?","date":"2022-04-16T00:00:00.000Z","formattedDate":"April 16, 2022","tags":[{"label":"JavaScript","permalink":"/sptechblogs/blog/tags/java-script"},{"label":"node","permalink":"/sptechblogs/blog/tags/node"},{"label":"alternative","permalink":"/sptechblogs/blog/tags/alternative"},{"label":"programming","permalink":"/sptechblogs/blog/tags/programming"}],"readingTime":1.435,"hasTruncateMarker":true,"authors":[{"name":"Shivam Pawar","title":"Software Developer @Emtec Inc.","url":"https://github.com/shivam-pawar/","imageURL":"https://github.com/shivam-pawar.png","key":"shivam-pawar"}],"frontMatter":{"slug":"replaceAll-in-javascript","title":"FIX - replaceAll() is not a Function In JavaScript","authors":"shivam-pawar","tags":["JavaScript","node","alternative","programming"]},"prevItem":{"title":"Improve your JavaScript Code Part - 1","permalink":"/sptechblogs/blog/improve-your-js-code-part-1"}},"content":"## Why is this error occurring?\\r\\n\\r\\nYou will get error something like this: TypeError: replaceAll is not a function while using replaceAll() function because whatever version of node js or browser does not support this function.\\r\\n\x3c!--truncate--\x3e\\r\\nreplaceAll method was added es2012 or es12 so if you are using ECMAScript version below 12 then definitely you will see this error as there is not implementation for replaceAll in earlier versions.\\r\\n\\r\\n## How To Fix thee Issue?\u200b\\r\\n\\r\\nAs a workaround for this problem, you can use replace() method with a regular expression that has the global (\u201cg\u201d) flag set which had a strong support for all ES version and browsers.\\r\\n\\r\\nLets try with an example:\\r\\n\\r\\nBelow example will replace all whitespaces(\u201d \u201c) with hyphen \u201c-\u201c.\\r\\n\\r\\n```javascript\\r\\nfunction testReplace(sentence) {\\r\\n  return sentence.replace(/[\\" \\"]/g, \\"-\\");\\r\\n}\\r\\n\\r\\nconsole.log(testReplace(\\"This is Test\\"));\\r\\n```\\r\\n\\r\\n## What if you need to use replaceAll() at multiple places?\\r\\n\\r\\nAlternatively, You can create a function which will resemble the behavior of replaceAll() method.\\r\\n\\r\\nLike in this example:\\r\\n\\r\\n```javascript\\r\\nfunction someFunction(blogName) {\\r\\n  return replaceAll(blogName, /[\\" \\"]/g, \\"-\\");\\r\\n}\\r\\n\\r\\n\\r\\nfunction replaceAll(sentence, regx, replaceBy) {\\r\\n  return sentence.replace(regx, replaceBy);\\r\\n}\\r\\n\\r\\nconsole.log(someFunction(\\"This is my blog\\"));\\r\\n```\\r\\n\\r\\nNow you are good to use replaceAll() method anywhere but with different implementation. Note that we are passing 3 parameters to our replaceAll() method which is different than the actual replaceAll() method but both will give desired output.\\r\\n\\r\\n## Conclusion\\r\\n\\r\\nThere is no implementation of replaceAll() present in version of ECMAScript12 that\u2019s why we get this error. To fix this, we had a workaround which will use replace() method to do exact thing which replaceAll() does.\\r\\n\\r\\n> If you found this article useful, please share it with your friends and colleagues!\u2764\ufe0f\\r\\n\\r\\nThis article was originally published [here](https://dev.to/shivampawar/fix-replaceall-is-not-a-function-in-javascript-3klp)"}]}')}}]);